[{"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/index.js":"1","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/reportWebVitals.js":"2","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/App.js":"3","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/ErrorBody.js":"4","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/Menu.js":"5","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FormTextInput.js":"6","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FormTextAreaInput.js":"7","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/DeleteEntity.js":"8","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/TaskComponent/All.js":"9","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/TaskComponent/EditTask.js":"10","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/TaskComponent/About.js":"11","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/TaskComponent/NewTask.js":"12","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/PartnerComponent/Partners.js":"13","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/PartnerComponent/AboutPartner.js":"14","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/PartnerComponent/EditPartner.js":"15","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/PartnerComponent/NewPartner.js":"16","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/EmployeeComponent/Employees.js":"17","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/EmployeeComponent/EditEmployee.js":"18","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/EmployeeComponent/AboutEmployee.js":"19","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/EmployeeComponent/NewEmployee.js":"20","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FinishedComponent/Finished.js":"21","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FinishedComponent/AboutFinished.js":"22","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FinishedComponent/EditFinished.js":"23","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FinishedComponent/NewFinished.js":"24","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/StatisticsComponent/Statistics.js":"25","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/Service/Service.js":"26"},{"size":498,"mtime":1643228127961,"results":"27","hashOfConfig":"28"},{"size":362,"mtime":1642595238294,"results":"29","hashOfConfig":"28"},{"size":2701,"mtime":1643637919316,"results":"30","hashOfConfig":"28"},{"size":675,"mtime":1643027769481,"results":"31","hashOfConfig":"28"},{"size":770,"mtime":1643228173001,"results":"32","hashOfConfig":"28"},{"size":645,"mtime":1643637647736,"results":"33","hashOfConfig":"28"},{"size":679,"mtime":1643383065160,"results":"34","hashOfConfig":"28"},{"size":976,"mtime":1643389074646,"results":"35","hashOfConfig":"28"},{"size":2261,"mtime":1643637283136,"results":"36","hashOfConfig":"28"},{"size":3977,"mtime":1643637371931,"results":"37","hashOfConfig":"28"},{"size":1382,"mtime":1643637243135,"results":"38","hashOfConfig":"28"},{"size":3031,"mtime":1643637412760,"results":"39","hashOfConfig":"28"},{"size":2112,"mtime":1643637098373,"results":"40","hashOfConfig":"28"},{"size":1493,"mtime":1643636841680,"results":"41","hashOfConfig":"28"},{"size":3536,"mtime":1643636964827,"results":"42","hashOfConfig":"28"},{"size":2558,"mtime":1643637057816,"results":"43","hashOfConfig":"28"},{"size":2128,"mtime":1643635518115,"results":"44","hashOfConfig":"28"},{"size":3580,"mtime":1643636026923,"results":"45","hashOfConfig":"28"},{"size":1429,"mtime":1643635858463,"results":"46","hashOfConfig":"28"},{"size":2595,"mtime":1643636349193,"results":"47","hashOfConfig":"28"},{"size":2128,"mtime":1643635518132,"results":"48","hashOfConfig":"28"},{"size":1576,"mtime":1643636447668,"results":"49","hashOfConfig":"28"},{"size":5313,"mtime":1643636591786,"results":"50","hashOfConfig":"28"},{"size":4068,"mtime":1643636773731,"results":"51","hashOfConfig":"28"},{"size":5675,"mtime":1643637552041,"results":"52","hashOfConfig":"28"},{"size":6076,"mtime":1643637115167,"results":"53","hashOfConfig":"28"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},"c6u3l3",{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"59"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"56"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"68"},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"76"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"76"},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"85","usedDeprecatedRules":"76"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"76"},{"filePath":"88","messages":"89","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"76"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"93","usedDeprecatedRules":"76"},{"filePath":"94","messages":"95","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"96","usedDeprecatedRules":"76"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"76"},{"filePath":"102","messages":"103","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"76"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"76"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"76"},{"filePath":"113","messages":"114","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"76"},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"76"},{"filePath":"119","messages":"120","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"121","usedDeprecatedRules":"76"},{"filePath":"122","messages":"123","errorCount":0,"fatalErrorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"76"},"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/index.js",[],["125","126"],"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/reportWebVitals.js",[],["127","128"],"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/App.js",[],"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/ErrorBody.js",[],"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/Menu.js",[],"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FormTextInput.js",[],["129","130"],"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FormTextAreaInput.js",[],"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/DeleteEntity.js",[],["131","132"],"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/TaskComponent/All.js",[],["133","134"],"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/TaskComponent/EditTask.js",["135","136","137","138"],"import { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  deleteTaskById,\n  fetchPartners,\n  fetchTasksById,\n  updateTask\n} from \"../Service/Service\";\nimport { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport FormTextInput from \"../FormTextInput\";\nimport FormTextAreaInput from \"../FormTextAreaInput\";\nimport DeleteEntity from \"../DeleteEntity\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst Name = styled.div`\n  margin: 10px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst Desc = styled.div`\n  margin: 20px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst AddNew = styled.div`\n  display: flex;\n  padding-left: 100px;\n`;\n\nconst EditTask = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [partners, setPartners] = useState();\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [updatedTask, setUpdatedTask] = useState({});\n\n  const getTask = async (id) => {\n    const response = await fetchTasksById(id);\n    setUpdatedTask(response);\n  };\n\n  const deleteClick = (e) => {\n    deleteTaskById(id, setSuccess, setError);\n  };\n\n  const getPartners = async () => {\n    const result = await fetchPartners();\n    setPartners(result);\n  };\n\n  const submitForm = (e) => {\n    updateTask(updatedTask, id, setSuccess, setError);\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    getPartners();\n  }, []);\n\n  useEffect(() => {\n    if (id) {\n      getTask(id);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (success) {\n      navigate(\"/feladatok\");\n    }\n  }, [success]);\n\n  if (!partners) {\n    return <div>Betöltés folyamatban</div>;\n  }\n  return (\n    <Container>\n      <Wrapper>\n        <div key={updatedTask.id}>\n          <Form onSubmit={submitForm}>\n            <Name>\n              <FormTextInput\n                label=\"Feladat neve\"\n                dataObject={updatedTask}\n                dataObjectKey=\"name\"\n                setter={setUpdatedTask}\n                required={true}\n              />\n            </Name>\n            <Name>\n              <FormTextAreaInput\n                label=\"Feladat leírása\"\n                dataObject={updatedTask}\n                dataObjectKey=\"intro\"\n                setter={setUpdatedTask}\n                rows={15}\n                maxLength={100}\n                required={true}\n                name=\"fullDescription\"\n                dataObjectKey=\"description\"\n              />\n            </Name>\n            <Desc>\n              <Form.Select\n                onChange={(e) =>\n                  setUpdatedTask({ ...updatedTask, part: e.target.value })\n                }\n              >\n                <option>Válasszon partnert!</option>\n                {partners.map((partner) => (\n                  <option value={partner.name} key={partner.id}>\n                    {partner.name}\n                  </option>\n                ))}\n              </Form.Select>\n            </Desc>\n            <AddNew>\n              <Button\n                variant=\"outline-secondary\"\n                className=\"editButton\"\n                type=\"submit\"\n              >\n                Szerkesztés\n              </Button>\n              <div className=\"deleteButton\">\n                <DeleteEntity\n                  confirmationQuestion={`Biztosan kitörlöd a következő feladatot? ${updatedTask.name}`}\n                  handleDelete={deleteClick}\n                  ID={updatedTask.id}\n                />\n              </div>\n            </AddNew>\n          </Form>\n        </div>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default EditTask;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/TaskComponent/About.js",["139"],"import styled from \"styled-components\";\nimport \"../App.css\";\nimport { useEffect, useState } from \"react\";\nimport { fetchTasksById } from \"../Service/Service\";\nimport { useParams } from \"react-router-dom\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst DetailsName = styled.div`\n  padding-top: 60px;\n  text-align: center;\n  font-size: 30px;\n`;\n\nconst DetailsDescription = styled.div`\n  padding-top: 80px;\n  text-align: center;\n  font-size: 20px;\n`;\n\nconst About = () => {\n  const { id } = useParams();\n\n  const [task, setTask] = useState(null);\n\n  const getTasksById = async (id) => {\n    const result = await fetchTasksById(id);\n    setTask(result);\n  };\n\n  useEffect(() => {\n    if (id) {\n      getTasksById(id);\n    }\n  }, []);\n  return (\n    <Container>\n      {task ? (\n        <Wrapper>\n          <DetailsName>{task.name}</DetailsName>\n          <DetailsDescription>{task.description}</DetailsDescription>\n          <DetailsDescription>{task.part}</DetailsDescription>\n        </Wrapper>\n      ) : (\n        <div>Betöltés folyamatban...</div>\n      )}\n    </Container>\n  );\n};\n\nexport default About;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/TaskComponent/NewTask.js",["140","141","142"],"import styled from \"styled-components\";\nimport \"../App.css\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addTask, fetchPartners } from \"../Service/Service\";\nimport FormTextInput from \"../FormTextInput\";\nimport FormTextAreaInput from \"../FormTextAreaInput\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst Name = styled.div`\n  margin: 10px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst Desc = styled.div`\n  margin: 20px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst AddNew = styled.div`\n  display: flex;\n  padding-left: 80px;\n`;\n\nconst NewTask = () => {\n  const navigate = useNavigate();\n\n  const [newTask, setNewTask] = useState(\"\");\n  const [partners, setPartners] = useState();\n  const [success, setSuccess] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const submitForm = (e) => {\n    addTask(newTask, setSuccess, setHasError);\n  };\n\n  const getPartners = async () => {\n    const result = await fetchPartners();\n    setPartners(result);\n  };\n\n  useEffect(() => {\n    getPartners();\n  }, []);\n\n  useEffect(() => {\n    if (success) {\n      navigate(\"/feladatok\");\n    }\n  }, [success]);\n\n  if (!partners) {\n    return <div>Betöltés folyamatban</div>;\n  }\n  return (\n    <Container>\n      <Wrapper>\n        <Form onSubmit={submitForm}>\n          <Name>\n            <FormTextInput\n              label=\"Feladat neve\"\n              dataObject={newTask}\n              dataObjectKey=\"name\"\n              setter={setNewTask}\n              required={true}\n            />\n          </Name>\n          <Name>\n            <FormTextAreaInput\n              label=\"Feladat leírása\"\n              dataObject={newTask}\n              dataObjectKey=\"description\"\n              setter={setNewTask}\n              rows={15}\n              maxLength={100}\n              required={true}\n              name=\"fullDescription\"\n              dataObjectKey=\"description\"\n            />\n          </Name>\n          <Desc>\n            Partner\n            <Form.Select\n              onChange={(e) => setNewTask({ ...newTask, part: e.target.value })}\n            >\n              <option>Válasszon partnert!</option>\n              {partners.map((partner) => (\n                <option value={partner.name} key={partner.id}>\n                  {partner.name}\n                </option>\n              ))}\n            </Form.Select>\n          </Desc>\n          <AddNew>\n            <Button variant=\"outline-secondary\" className=\"edit\" type=\"submit\">\n              Feladat hozzáadása\n            </Button>\n          </AddNew>\n        </Form>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default NewTask;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/PartnerComponent/Partners.js",[],"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/PartnerComponent/AboutPartner.js",["143"],"import styled from \"styled-components\";\nimport \"../App.css\";\nimport { useEffect, useState } from \"react\";\nimport { fetchPartnersById } from \"../Service/Service\";\nimport { useParams } from \"react-router-dom\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst DetailsName = styled.div`\n  padding-top: 60px;\n  text-align: center;\n  font-size: 30px;\n`;\n\nconst DetailsDescription = styled.div`\n  padding-top: 80px;\n  text-align: center;\n  font-size: 20px;\n`;\n\nconst AboutPartner = () => {\n  const { id } = useParams();\n\n  const [partner, setPartner] = useState(null);\n\n  const getPartnersById = async (id) => {\n    const result = await fetchPartnersById(id);\n    setPartner(result);\n  };\n\n  useEffect(() => {\n    if (id) {\n      getPartnersById(id);\n    }\n  }, []);\n  return (\n    <Container>\n      {partner ? (\n        <Wrapper>\n          <DetailsName>{partner.name}</DetailsName>\n          <DetailsDescription>{partner.address}</DetailsDescription>\n          <DetailsDescription>{partner.email}</DetailsDescription>\n          <DetailsDescription>{partner.phone}</DetailsDescription>\n        </Wrapper>\n      ) : (\n        <div>Betöltés folyamatban...</div>\n      )}\n    </Container>\n  );\n};\n\nexport default AboutPartner;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/PartnerComponent/EditPartner.js",["144","145","146"],"import { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  deletePartnersById,\n  fetchPartnersById,\n  updatePartner,\n} from \"../Service/Service\";\nimport { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport FormTextInput from \"../FormTextInput\";\nimport DeleteEntity from \"../DeleteEntity\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst Name = styled.div`\n  margin: 10px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst AddNew = styled.div`\n  display: flex;\n  padding-left: 100px;\n`;\n\nconst EditPartner = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [updatedPartner, setUpdatedPartner] = useState({});\n\n  const getPartner = async (id) => {\n    const response = await fetchPartnersById(id);\n    setUpdatedPartner(response);\n  };\n\n  const deleteClick = (e) => {\n    deletePartnersById(id, setSuccess, setError);\n  };\n\n  const submitForm = (e) => {\n    updatePartner(updatedPartner, id, setSuccess, setError);\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    if (id) {\n      getPartner(id);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (success) {\n      navigate(\"/partnerek\");\n    }\n  }, [success]);\n\n  return (\n    <Container>\n      <Wrapper>\n        <div key={updatedPartner.id}>\n          <Form onSubmit={submitForm}>\n            <Name>\n              <FormTextInput\n                label=\"Partner neve\"\n                dataObject={updatedPartner}\n                dataObjectKey=\"name\"\n                setter={setUpdatedPartner}\n                required={true}\n              />\n            </Name>\n            <Name>\n              <FormTextInput\n                label=\"Partner címe\"\n                dataObject={updatedPartner}\n                dataObjectKey=\"address\"\n                setter={setUpdatedPartner}\n                required={true}\n              />\n            </Name>\n            <Name>\n              <FormTextInput\n                label=\"Partner e-mail címe\"\n                dataObject={updatedPartner}\n                dataObjectKey=\"email\"\n                setter={setUpdatedPartner}\n                required={true}\n              />\n            </Name>\n            <Name>\n              <FormTextInput\n                label=\"Partner telefonszáma\"\n                dataObject={updatedPartner}\n                dataObjectKey=\"phone\"\n                setter={setUpdatedPartner}\n                required={true}\n              />\n            </Name>\n            <AddNew>\n              <Button\n                variant=\"outline-secondary\"\n                className=\"editButton\"\n                type=\"submit\"\n              >\n                Szerkesztés\n              </Button>\n              <div className=\"deleteButton\">\n                <DeleteEntity\n                  confirmationQuestion={`Biztosan kitörlöd a következő partnert? ${updatedPartner.name}`}\n                  handleDelete={deleteClick}\n                  ID={updatedPartner.id}\n                />\n              </div>\n            </AddNew>\n          </Form>\n        </div>\n      </Wrapper>\n    </Container>\n  );\n};\nexport default EditPartner;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/PartnerComponent/NewPartner.js",["147","148"],"import styled from \"styled-components\";\nimport \"../App.css\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addPartner } from \"../Service/Service\";\nimport FormTextInput from \"../FormTextInput\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst Name = styled.div`\n  margin: 10px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst AddNew = styled.div`\n  display: flex;\n  padding-left: 80px;\n`;\n\nconst NewPartner = () => {\n  const navigate = useNavigate();\n\n  const [newPartner, setNewPartner] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const submitForm = (e) => {\n    addPartner(newPartner, setHasError, setSuccess);\n  };\n\n  useEffect(() => {\n    if (success) {\n      navigate(\"/partnerek\");\n    }\n  }, [success]);\n\n  return (\n    <Container>\n      <Wrapper>\n        <Form onSubmit={submitForm}>\n          <Name>\n            <FormTextInput\n              label=\"Partner neve\"\n              dataObject={newPartner}\n              dataObjectKey=\"name\"\n              setter={setNewPartner}\n              required={true}\n            />\n          </Name>\n          <Name>\n            <FormTextInput\n              label=\"Partner címe\"\n              dataObject={newPartner}\n              dataObjectKey=\"address\"\n              setter={setNewPartner}\n              required={true}\n            />\n          </Name>\n          <Name>\n            <FormTextInput\n              label=\"Partner e-mail címe\"\n              dataObject={newPartner}\n              dataObjectKey=\"email\"\n              setter={setNewPartner}\n              required={true}\n            />\n          </Name>\n          <Name>\n            <FormTextInput\n              label=\"Partner telefonszáma\"\n              dataObject={newPartner}\n              dataObjectKey=\"phone\"\n              setter={setNewPartner}\n              required={true}\n            />\n          </Name>\n          <AddNew>\n            <Button variant=\"outline-secondary\" className=\"edit\" type=\"submit\">\n              Partner hozzáadása\n            </Button>\n          </AddNew>\n        </Form>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default NewPartner;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/EmployeeComponent/Employees.js",[],"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/EmployeeComponent/EditEmployee.js",["149","150","151"],"import { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  deleteEmployeeById,\n  fetchEmployeeById,\n  updateEmployee,\n} from \"../Service/Service\";\nimport { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport FormTextInput from \"../FormTextInput\";\nimport { Button, Form } from \"react-bootstrap\";\nimport DeleteEntity from \"../DeleteEntity\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst Name = styled.div`\n  margin: 10px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst AddNew = styled.div`\n  display: flex;\n  padding-left: 100px;\n`;\n\nconst EditEmployee = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [updatedEmployee, setUpdatedEmployee] = useState({});\n\n  const getEmployee = async (id) => {\n    const response = await fetchEmployeeById(id);\n    setUpdatedEmployee(response);\n  };\n\n  const deleteClick = (e) => {\n    deleteEmployeeById(id, setSuccess, setError);\n  };\n\n  const submitForm = (e) => {\n    updateEmployee(updatedEmployee, id, setSuccess, setError);\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    if (id) {\n      getEmployee(id);\n    }\n  }, []);\n\n  useEffect(() => {\n    if (success) {\n      navigate(\"/dolgozok\");\n    }\n  }, [success]);\n\n  return (\n    <Container>\n      <Wrapper>\n        <div key={updatedEmployee.id}>\n          <Form onSubmit={submitForm}>\n            <Name>\n              <FormTextInput\n                label=\"Munkatárs neve\"\n                dataObject={updatedEmployee}\n                dataObjectKey=\"name\"\n                setter={setUpdatedEmployee}\n                required={true}\n              />\n            </Name>\n            <Name>\n              <FormTextInput\n                label=\"Munkatárs beosztása\"\n                dataObject={updatedEmployee}\n                dataObjectKey=\"post\"\n                setter={setUpdatedEmployee}\n                required={true}\n              />\n            </Name>\n            <Name>\n              <FormTextInput\n                label=\"Munkatárs email címe\"\n                dataObject={updatedEmployee}\n                dataObjectKey=\"email\"\n                setter={setUpdatedEmployee}\n                required={true}\n              />\n            </Name>\n            <Name>\n              <FormTextInput\n                label=\"Munkatárs telefonszáma\"\n                dataObject={updatedEmployee}\n                dataObjectKey=\"phoneNumber\"\n                setter={setUpdatedEmployee}\n                required={true}\n              />\n            </Name>\n\n            <AddNew>\n              <Button\n                variant=\"outline-secondary\"\n                className=\"editButton\"\n                type=\"submit\"\n              >\n                Szerkesztés\n              </Button>\n              <div className=\"deleteButton\">\n                <DeleteEntity\n                  confirmationQuestion={`Biztosan kitörlöd a következő munkatársat? ${updatedEmployee.name}`}\n                  handleDelete={deleteClick}\n                  ID={updatedEmployee.id}\n                />\n              </div>\n            </AddNew>\n          </Form>\n        </div>\n      </Wrapper>\n    </Container>\n  );\n};\nexport default EditEmployee;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/EmployeeComponent/AboutEmployee.js",["152"],"import styled from \"styled-components\";\nimport \"../App.css\";\nimport { useEffect, useState } from \"react\";\nimport { fetchEmployeeById } from \"../Service/Service\";\nimport { useParams } from \"react-router-dom\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst DetailsName = styled.div`\n  padding-top: 60px;\n  text-align: center;\n  font-size: 30px;\n`;\n\nconst Details = styled.div`\n  padding-top: 80px;\n  text-align: center;\n  font-size: 20px;\n`;\n\nconst AboutEmployee = () => {\n  const { id } = useParams();\n\n  const [employee, setEmployee] = useState(null);\n\n  const getEmployeeById = async (id) => {\n    const result = await fetchEmployeeById(id);\n    setEmployee(result);\n  };\n\n  useEffect(() => {\n    if (id) {\n      getEmployeeById(id);\n    }\n  }, []);\n  return (\n    <Container>\n      {employee ? (\n        <Wrapper>\n          <DetailsName>{employee.name}</DetailsName>\n          <Details>{employee.post}</Details>\n          <Details>{employee.email}</Details>\n          <Details>{employee.phoneNumber}</Details>\n        </Wrapper>\n      ) : (\n        <div>Betöltés folyamatban...</div>\n      )}\n    </Container>\n  );\n};\n\nexport default AboutEmployee;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/EmployeeComponent/NewEmployee.js",["153","154"],"import styled from \"styled-components\";\nimport \"../App.css\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport { addEmployee } from \"../Service/Service\";\nimport FormTextInput from \"../FormTextInput\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst Name = styled.div`\n  margin: 10px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst AddNew = styled.div`\n  display: flex;\n  padding-left: 80px;\n`;\n\nconst NewEmployee = () => {\n  const navigate = useNavigate();\n\n  const [newEmployee, setNewEmployee] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const [hasError, setHasError] = useState(false);\n\n  const submitForm = (e) => {\n    addEmployee(newEmployee, setHasError, setSuccess);\n  };\n\n  useEffect(() => {\n    if (success) {\n      navigate(\"/dolgozok\");\n    }\n  }, [success]);\n\n  return (\n    <Container>\n      <Wrapper>\n        <Form onSubmit={submitForm}>\n          <Name>\n            <FormTextInput\n              label=\"Munkatárs neve\"\n              dataObject={newEmployee}\n              dataObjectKey=\"name\"\n              setter={setNewEmployee}\n              required={true}\n            />\n          </Name>\n          <Name>\n            <FormTextInput\n              label=\"Munkatárs beosztása\"\n              dataObject={newEmployee}\n              dataObjectKey=\"post\"\n              setter={setNewEmployee}\n              required={true}\n            />\n          </Name>\n          <Name>\n            <FormTextInput\n              label=\"Munkatárs e-mail címe\"\n              dataObject={newEmployee}\n              dataObjectKey=\"email\"\n              setter={setNewEmployee}\n              required={true}\n            />\n          </Name>\n          <Name>\n            <FormTextInput\n              label=\"Munkatárs telefonszáma\"\n              dataObject={newEmployee}\n              dataObjectKey=\"phoneNumber\"\n              setter={setNewEmployee}\n              required={true}\n            />\n          </Name>\n          <AddNew>\n            <Button variant=\"outline-secondary\" className=\"edit\" type=\"submit\">\n              Munkatárs hozzáadása\n            </Button>\n          </AddNew>\n        </Form>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default NewEmployee;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FinishedComponent/Finished.js",[],"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FinishedComponent/AboutFinished.js",["155"],"import styled from \"styled-components\";\nimport \"../App.css\";\nimport { useEffect, useState } from \"react\";\nimport { fetchFinishedById } from \"../Service/Service\";\nimport { useParams } from \"react-router-dom\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst DetailsName = styled.div`\n  padding-top: 60px;\n  text-align: center;\n  font-size: 30px;\n`;\n\nconst DetailsDescription = styled.div`\n  padding-top: 80px;\n  text-align: center;\n  font-size: 20px;\n`;\n\n\nconst AboutFinished = () => {\n  const { id } = useParams();\n\n  const [finished, setFinished] = useState(null);\n\n  const getFinishedById = async (id) => {\n    const result = await fetchFinishedById(id);\n    setFinished(result);\n  };\n\n  useEffect(() => {\n    if (id) {\n      getFinishedById(id);\n    }\n  }, []);\n  return (\n    <Container>\n      {finished ? (\n        <Wrapper>\n          <DetailsName>{finished.name}</DetailsName>\n          <DetailsDescription>{finished.time} óra</DetailsDescription>\n          <DetailsDescription>{finished.emp}</DetailsDescription>\n          <DetailsDescription>{finished.project}</DetailsDescription>\n          <DetailsDescription>{finished.partner}</DetailsDescription>\n        </Wrapper>\n      ) : (\n        <div>Betöltés folyamatban...</div>\n      )}\n    </Container>\n  );\n};\n\nexport default AboutFinished;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FinishedComponent/EditFinished.js",["156","157","158"],"import { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  deleteFinishedById,\n  fetchEmployees,\n  fetchFinishedById,\n  fetchPartners,\n  fetchTasks,\n  updateFinished\n} from \"../Service/Service\";\nimport { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport FormTextInput from \"../FormTextInput\";\nimport DeleteEntity from \"../DeleteEntity\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst Name = styled.div`\n  margin: 10px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst Desc = styled.div`\n  margin: 20px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst AddNew = styled.div`\n  display: flex;\n  padding-left: 100px;\n`;\n\nconst EditFinished = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [tasks, setTasks] = useState();\n  const [employees, setEmployees] = useState();\n  const [partner, setPartner] = useState();\n\n  const [updatedFinished, setUpdatedFinished] = useState({});\n\n  const getFinished = async (id) => {\n    const response = await fetchFinishedById(id);\n    setUpdatedFinished(response);\n  };\n\n  const getPartner = async () => {\n    const result = await fetchPartners();\n    setPartner(result);\n  };\n\n  const getEmployees = async () => {\n    const result = await fetchEmployees();\n    setEmployees(result);\n  };\n\n  const getTasks = async () => {\n    const result = await fetchTasks();\n    setTasks(result);\n  };\n\n  const deleteClick = (e) => {\n    deleteFinishedById(id, setSuccess, setError);\n  };\n\n  const submitForm = (e) => {\n    updateFinished(updatedFinished, id, setSuccess, setError);\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    if (id) {\n      getFinished(id);\n    }\n  }, []);\n\n  useEffect(() => {\n    getTasks();\n    getEmployees();\n    getPartner();\n  }, []);\n\n  useEffect(() => {\n    if (success) {\n      navigate(\"/teljesitett\");\n    }\n  }, [success]);\n\n  if (!tasks || !employees || !partner) {\n    return <div>Betöltés folyamatban</div>;\n  }\n  return (\n    <Container>\n      <Wrapper>\n        <div key={updatedFinished.id}>\n          <Form onSubmit={submitForm}>\n            <Name>\n              <FormTextInput\n                label=\"Feladat neve\"\n                dataObject={updatedFinished}\n                dataObjectKey=\"name\"\n                setter={setUpdatedFinished}\n                required={true}\n              />\n            </Name>\n            <Name>\n              <FormTextInput\n                label=\"Feladat ideje\"\n                dataObject={updatedFinished}\n                dataObjectKey=\"time\"\n                setter={setUpdatedFinished}\n                required={true}\n              />\n            </Name>\n            <Desc>\n              Munkatársak\n              <Form.Select\n                onChange={(e) =>\n                  setUpdatedFinished({\n                    ...updatedFinished,\n                    emp: e.target.value\n                  })\n                }\n              >\n                {employees.map((employee) => (\n                  <option value={employee.name} key={employee.id}>\n                    {employee.name}\n                  </option>\n                ))}\n              </Form.Select>\n            </Desc>\n\n            <Desc>\n              Feladat\n              <Form.Select\n                onChange={(e) =>\n                  setUpdatedFinished({\n                    ...updatedFinished,\n                    project: e.target.value\n                  })\n                }\n              >\n                {tasks.map((task) => (\n                  <option value={task.name} key={task.id}>\n                    {task.name}\n                  </option>\n                ))}\n              </Form.Select>\n            </Desc>\n            <Desc>\n              Partner\n              <Form.Select\n                onChange={(e) =>\n                  setUpdatedFinished({\n                    ...updatedFinished,\n                    partner: e.target.value\n                  })\n                }\n              >\n                {partner.map((partner) => (\n                  <option value={partner.name} key={partner.id}>\n                    {partner.name}\n                  </option>\n                ))}\n              </Form.Select>\n            </Desc>\n            <AddNew>\n              <Button\n                variant=\"outline-secondary\"\n                className=\"editButton\"\n                type=\"submit\"\n              >\n                Szerkesztés\n              </Button>\n              <div className=\"deleteButton\">\n                <DeleteEntity\n                  confirmationQuestion={`Biztosan kitörlöd a következő feladatot? ${updatedFinished.name}`}\n                  handleDelete={deleteClick}\n                  ID={updatedFinished.id}\n                />\n              </div>\n            </AddNew>\n          </Form>\n        </div>\n      </Wrapper>\n    </Container>\n  );\n};\nexport default EditFinished;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FinishedComponent/NewFinished.js",["159","160","161"],"import styled from \"styled-components\";\nimport \"../App.css\";\nimport { Button, Form } from \"react-bootstrap\";\nimport { useState, useEffect } from \"react\";\nimport { useNavigate } from \"react-router-dom\";\nimport {\n  addFinished,\n  fetchEmployees,\n  fetchPartners,\n  fetchTasks\n} from \"../Service/Service\";\nimport FormTextInput from \"../FormTextInput\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst Name = styled.div`\n  margin: 10px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst Desc = styled.div`\n  margin: 20px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst AddNew = styled.div`\n  display: flex;\n  padding-left: 80px;\n`;\n\nconst NewFinished = () => {\n  const [newTask, setNewTask] = useState(\"\");\n  const [success, setSuccess] = useState(false);\n  const [partner, setPartner] = useState();\n  const [Error, setError] = useState(false);\n  const [tasks, setTasks] = useState();\n\n  const [employees, setEmployees] = useState();\n\n  const getEmployees = async () => {\n    const result = await fetchEmployees();\n    setEmployees(result);\n  };\n\n  const getTasks = async () => {\n    const result = await fetchTasks();\n    setTasks(result);\n  };\n\n  const getPartner = async () => {\n    const result = await fetchPartners();\n    setPartner(result);\n  };\n\n  const submitForm = (e) => {\n    addFinished(newTask, setSuccess, setError);\n    e.preventdefault();\n  };\n\n  useEffect(() => {\n    getEmployees();\n    getTasks();\n    getPartner();\n  }, []);\n\n  if (!employees || !tasks || !partner) {\n    return <div>Betöltés folyamatban</div>;\n  }\n  return (\n    <Container>\n      <Wrapper>\n        <Form onSubmit={submitForm}>\n          <Name>\n            <FormTextInput\n              label=\"Feladat neve\"\n              dataObject={newTask}\n              dataObjectKey=\"name\"\n              setter={setNewTask}\n              required={true}\n            />\n          </Name>\n          <Desc>\n            <FormTextInput\n              label=\"Munkaidő órában\"\n              dataObject={newTask}\n              dataObjectKey=\"time\"\n              setter={setNewTask}\n              required={true}\n            />\n          </Desc>\n          <Desc>\n            Munkatársak\n            <Form.Select\n              onChange={(e) => setNewTask({ ...newTask, emp: e.target.value })}\n            >\n              <option>Válasszon munkatársat!</option>\n              {employees.map((employee) => (\n                <option value={employee.name} key={employee.id}>\n                  {employee.name}\n                </option>\n              ))}\n            </Form.Select>\n          </Desc>\n          <Desc>\n            Feladat\n            <Form.Select\n              onChange={(e) =>\n                setNewTask({ ...newTask, project: e.target.value })\n              }\n            >\n              <option>Válasszon feladatot!</option>\n              {tasks.map((task) => (\n                <option value={task.name} key={task.id}>\n                  {task.name}\n                </option>\n              ))}\n            </Form.Select>\n          </Desc>\n          <Desc>\n            Partner\n            <Form.Select\n              onChange={(e) =>\n                setNewTask({ ...newTask, partner: e.target.value })\n              }\n            >\n              <option>Válasszon partnert!</option>\n              {partner.map((partner) => (\n                <option value={partner.name} key={partner.id}>\n                  {partner.name}\n                </option>\n              ))}\n            </Form.Select>\n          </Desc>\n          <AddNew>\n            <Button variant=\"outline-secondary\" className=\"edit\" type=\"submit\">\n              Feladat hozzáadása\n            </Button>\n          </AddNew>\n        </Form>\n      </Wrapper>\n    </Container>\n  );\n};\n\nexport default NewFinished;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/StatisticsComponent/Statistics.js",["162"],"import styled from \"styled-components\";\nimport \"../App.css\";\nimport { useEffect, useState } from \"react\";\nimport {\n  fetchEmployees,\n  fetchFinished,\n  fetchPartners,\n  fetchTasks\n} from \"../Service/Service\";\nimport { Table } from \"react-bootstrap\";\n\nconst Note = styled.div`\n  text-decoration: none;\n  margin: 20px 20px 20px 20px;\n  text-align: center;\n  padding-top: 33px;\n  color: #000;\n  background: white;\n  height: 100px;\n  width: 300px;\n  border-style: groove;\n`;\n\nconst Title = styled.div`\n  font-size: 30px;\n  text-align: center;\n  padding-top: 80px;\n  padding-bottom: 20px;\n`;\n\nconst TableStyle = styled.div`\n  padding-left: 70px;\n  padding-right: 70px;\n`;\n\nconst Statistics = () => {\n  const [task, setTasks] = useState([]);\n  const [partners, setPartners] = useState([]);\n  const [employees, setEmployees] = useState([]);\n  const [finished, setFinished] = useState([]);\n  const [error, setError] = useState(null);\n\n  const getTasks = async () => {\n    const result = await fetchTasks();\n    setTasks(result);\n  };\n\n  const getPartners = async () => {\n    const result = await fetchPartners();\n    setPartners(result);\n  };\n\n  const getEmployees = async () => {\n    const result = await fetchEmployees();\n    setEmployees(result);\n  };\n\n  const getFinished = async () => {\n    const result = await fetchFinished();\n    setFinished(result);\n  };\n\n  useEffect(() => {\n    getTasks().catch((err) => setError(err.massage));\n    getPartners().catch((err) => setError(err.massage));\n    getEmployees().catch((err) => setError(err.massage));\n    getFinished().catch((err) => setError(err.massage));\n  }, []);\n\n  return (\n    <div>\n      <div className=\"note\">\n        <Note>Feladatok száma: {task.length}</Note>\n        <Note>Partnerek száma: {partners.length}</Note>\n        <Note>Dolgozók száma: {employees.length}</Note>\n        <Note>Elvégzett feladatok száma: {finished.length}</Note>\n      </div>\n      <Title>Munkaidők száma:</Title>\n      <TableStyle>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>Munkatárs neve</th>\n              <th>Dolgozott órák száma</th>\n            </tr>\n          </thead>\n          <tbody>\n            {finished.map((finished) => {\n              return (\n                <tr key={finished.id}>\n                  <td>{finished.emp}</td>\n                  <td>{finished.time} óra</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </TableStyle>\n      <Title>Munkaidők száma partnerenként:</Title>\n      <TableStyle>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>Partner neve</th>\n              <th>Dolgozott órák száma</th>\n            </tr>\n          </thead>\n          <tbody>\n            {finished.map((finished) => {\n              return (\n                <tr key={finished.id}>\n                  <td>{finished.partner}</td>\n                  <td>{finished.time} óra</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </TableStyle>\n      <Title>Feladatok:</Title>\n      <TableStyle>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Feladat neve</th>\n              <th>Partner</th>\n            </tr>\n          </thead>\n          <tbody>\n            {task.map((task) => {\n              return (\n                <tr key={task.id}>\n                  <td>{task.id}</td>\n                  <td>{task.name}</td>\n                  <td>{task.part}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </TableStyle>\n      <Title>Partnerek:</Title>\n      <TableStyle>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Partner neve</th>\n              <th>E-mail cím</th>\n            </tr>\n          </thead>\n          <tbody>\n            {partners.map((partner) => {\n              return (\n                <tr key={partner.id}>\n                  <td>{partner.id}</td>\n                  <td>{partner.name}</td>\n                  <td>{partner.email}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </TableStyle>\n      <Title>Dolgozók:</Title>\n      <TableStyle>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Munkatárs neve</th>\n              <th>Beosztás</th>\n            </tr>\n          </thead>\n          <tbody>\n            {employees.map((employee) => {\n              return (\n                <tr key={employee.id}>\n                  <td>{employee.id}</td>\n                  <td>{employee.name}</td>\n                  <td>{employee.post}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </TableStyle>\n      <Title>Elvégzett feladatok:</Title>\n      <TableStyle>\n        <Table striped bordered hover variant=\"dark\">\n          <thead>\n            <tr>\n              <th>#</th>\n              <th>Feladat neve</th>\n              <th>Munkatárs</th>\n            </tr>\n          </thead>\n          <tbody>\n            {finished.map((finished) => {\n              return (\n                <tr key={finished.id}>\n                  <td>{finished.id}</td>\n                  <td>{finished.name}</td>\n                  <td>{finished.emp}</td>\n                </tr>\n              );\n            })}\n          </tbody>\n        </Table>\n      </TableStyle>\n    </div>\n  );\n};\n\nexport default Statistics;\n","/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/Service/Service.js",["163","164","165","166","167","168","169","170","171","172","173","174"],"import axios from \"axios\";\n\nexport const fetchTasks = async () => {\n  const url = \"/api/tasks\";\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const fetchTasksById = async (id) => {\n  const url = \"/api/tasks\" + \"/\" + id;\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const updateTask = async (task, id, setSuccess, setHasError) => {\n  const url = \"/api/tasks\" + \"/\" + id;\n  try {\n    const response = await axios.put(url, task);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\n\nexport const deleteTaskById = async (id, setSuccess, setError) => {\n  const url = \"/api/tasks\" + \"/\" + id;\n  try {\n    const response = await axios.delete(url);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};\n\nexport const fetchPartners = async () => {\n  const url = \"/api/partners\";\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const fetchPartnersById = async (id) => {\n  const url = \"/api/partners\" + \"/\" + id;\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const addPartner = async (partner, setSuccess, setHasError) => {\n  const url = \"/api/partners\";\n  try {\n    const response = await axios.post(url, partner);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\n\nexport const updatePartner = async (\n  updatedPartner,\n  id,\n  setSuccess,\n  setHasError\n) => {\n  const url = \"/api/partners\" + \"/\" + id;\n  try {\n    const response = await axios.put(url, updatedPartner);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\n\nexport const deletePartnersById = async (id, setSuccess, setError) => {\n  const url = \"/api/partners\" + \"/\" + id;\n  try {\n    const response = await axios.delete(url);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};\n\nexport const fetchEmployees = async () => {\n  const url = \"/api/employees\";\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const fetchEmployeeById = async (id) => {\n  const url = \"/api/employees\" + \"/\" + id;\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a munkatársak listáját!\");\n  }\n};\n\nexport const addEmployee = async (newEmployee, setSuccess, setHasError) => {\n  const url = \"/api/employees\";\n  try {\n    const response = await axios.post(url, newEmployee);\n    if (response.status === 201) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\n\nexport const updateEmployee = async (\n  updatedEmployee,\n  id,\n  setSuccess,\n  setHasError\n) => {\n  const url = \"/api/employees\" + \"/\" + id;\n  try {\n    const response = await axios.put(url, updatedEmployee);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\n\nexport const deleteEmployeeById = async (id, setSuccess, setError) => {\n  const url = \"/api/employees\" + \"/\" + id;\n  try {\n    const response = await axios.delete(url);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};\n\nexport const fetchFinished = async () => {\n  const url = \"/api/finished\";\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const fetchFinishedById = async (id) => {\n  const url = \"/api/finished\" + \"/\" + id;\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a munkatársak listáját!\");\n  }\n};\n\nexport const updateFinished = async (\n  updatedFinished,\n  id,\n  setSuccess,\n  setHasError\n) => {\n  const url = \"/api/finished\" + \"/\" + id;\n  try {\n    const response = await axios.put(url, updatedFinished);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\n\nexport const deleteFinishedById = async (id, setSuccess, setError) => {\n  const url = \"/api/finished\" + \"/\" + id;\n  try {\n    const response = await axios.delete(url);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};\n\nexport const addTask = async (task, setSuccess, setHasError) => {\n  const url = \"/api/tasks\";\n  try {\n    const response = await axios.post(url, task);\n    if (response.status === 201) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\n\nexport const addFinished = async (task, setSuccess, setError) => {\n  const url = \"/api/finished\";\n  try {\n    const response = await axios.post(url, task);\n    if (response.status === 201) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};\n",{"ruleId":"175","replacedBy":"176"},{"ruleId":"177","replacedBy":"178"},{"ruleId":"175","replacedBy":"179"},{"ruleId":"177","replacedBy":"180"},{"ruleId":"175","replacedBy":"181"},{"ruleId":"177","replacedBy":"182"},{"ruleId":"175","replacedBy":"183"},{"ruleId":"177","replacedBy":"184"},{"ruleId":"175","replacedBy":"185"},{"ruleId":"177","replacedBy":"186"},{"ruleId":"187","severity":1,"message":"188","line":58,"column":10,"nodeType":"189","messageId":"190","endLine":58,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":89,"column":6,"nodeType":"193","endLine":89,"endColumn":8,"suggestions":"194"},{"ruleId":"191","severity":1,"message":"195","line":95,"column":6,"nodeType":"193","endLine":95,"endColumn":15,"suggestions":"196"},{"ruleId":"197","severity":1,"message":"198","line":124,"column":17,"nodeType":"199","messageId":"200","endLine":124,"endColumn":44},{"ruleId":"191","severity":1,"message":"192","line":51,"column":6,"nodeType":"193","endLine":51,"endColumn":8,"suggestions":"201"},{"ruleId":"187","severity":1,"message":"202","line":53,"column":10,"nodeType":"189","messageId":"190","endLine":53,"endColumn":18},{"ruleId":"191","severity":1,"message":"195","line":72,"column":6,"nodeType":"193","endLine":72,"endColumn":15,"suggestions":"203"},{"ruleId":"197","severity":1,"message":"198","line":100,"column":15,"nodeType":"199","messageId":"200","endLine":100,"endColumn":42},{"ruleId":"191","severity":1,"message":"192","line":51,"column":6,"nodeType":"193","endLine":51,"endColumn":8,"suggestions":"204"},{"ruleId":"187","severity":1,"message":"188","line":48,"column":10,"nodeType":"189","messageId":"190","endLine":48,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":70,"column":6,"nodeType":"193","endLine":70,"endColumn":8,"suggestions":"205"},{"ruleId":"191","severity":1,"message":"195","line":76,"column":6,"nodeType":"193","endLine":76,"endColumn":15,"suggestions":"206"},{"ruleId":"187","severity":1,"message":"202","line":44,"column":10,"nodeType":"189","messageId":"190","endLine":44,"endColumn":18},{"ruleId":"191","severity":1,"message":"195","line":54,"column":6,"nodeType":"193","endLine":54,"endColumn":15,"suggestions":"207"},{"ruleId":"187","severity":1,"message":"188","line":48,"column":10,"nodeType":"189","messageId":"190","endLine":48,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":70,"column":6,"nodeType":"193","endLine":70,"endColumn":8,"suggestions":"208"},{"ruleId":"191","severity":1,"message":"195","line":76,"column":6,"nodeType":"193","endLine":76,"endColumn":15,"suggestions":"209"},{"ruleId":"191","severity":1,"message":"192","line":51,"column":6,"nodeType":"193","endLine":51,"endColumn":8,"suggestions":"210"},{"ruleId":"187","severity":1,"message":"202","line":44,"column":10,"nodeType":"189","messageId":"190","endLine":44,"endColumn":18},{"ruleId":"191","severity":1,"message":"195","line":54,"column":6,"nodeType":"193","endLine":54,"endColumn":15,"suggestions":"211"},{"ruleId":"191","severity":1,"message":"192","line":52,"column":6,"nodeType":"193","endLine":52,"endColumn":8,"suggestions":"212"},{"ruleId":"187","severity":1,"message":"188","line":58,"column":10,"nodeType":"189","messageId":"190","endLine":58,"endColumn":15},{"ruleId":"191","severity":1,"message":"192","line":99,"column":6,"nodeType":"193","endLine":99,"endColumn":8,"suggestions":"213"},{"ruleId":"191","severity":1,"message":"195","line":111,"column":6,"nodeType":"193","endLine":111,"endColumn":15,"suggestions":"214"},{"ruleId":"187","severity":1,"message":"215","line":5,"column":10,"nodeType":"189","messageId":"190","endLine":5,"endColumn":21},{"ruleId":"187","severity":1,"message":"216","line":53,"column":10,"nodeType":"189","messageId":"190","endLine":53,"endColumn":17},{"ruleId":"187","severity":1,"message":"217","line":55,"column":10,"nodeType":"189","messageId":"190","endLine":55,"endColumn":15},{"ruleId":"187","severity":1,"message":"188","line":41,"column":10,"nodeType":"189","messageId":"190","endLine":41,"endColumn":15},{"ruleId":"218","severity":1,"message":"219","line":16,"column":28,"nodeType":"220","messageId":"221","endLine":16,"endColumn":29},{"ruleId":"218","severity":1,"message":"219","line":28,"column":28,"nodeType":"220","messageId":"221","endLine":28,"endColumn":29},{"ruleId":"218","severity":1,"message":"219","line":40,"column":28,"nodeType":"220","messageId":"221","endLine":40,"endColumn":29},{"ruleId":"218","severity":1,"message":"219","line":64,"column":31,"nodeType":"220","messageId":"221","endLine":64,"endColumn":32},{"ruleId":"218","severity":1,"message":"219","line":93,"column":31,"nodeType":"220","messageId":"221","endLine":93,"endColumn":32},{"ruleId":"218","severity":1,"message":"219","line":105,"column":31,"nodeType":"220","messageId":"221","endLine":105,"endColumn":32},{"ruleId":"218","severity":1,"message":"219","line":129,"column":32,"nodeType":"220","messageId":"221","endLine":129,"endColumn":33},{"ruleId":"218","severity":1,"message":"219","line":158,"column":32,"nodeType":"220","messageId":"221","endLine":158,"endColumn":33},{"ruleId":"218","severity":1,"message":"219","line":170,"column":32,"nodeType":"220","messageId":"221","endLine":170,"endColumn":33},{"ruleId":"218","severity":1,"message":"219","line":194,"column":31,"nodeType":"220","messageId":"221","endLine":194,"endColumn":32},{"ruleId":"218","severity":1,"message":"219","line":211,"column":31,"nodeType":"220","messageId":"221","endLine":211,"endColumn":32},{"ruleId":"218","severity":1,"message":"219","line":223,"column":31,"nodeType":"220","messageId":"221","endLine":223,"endColumn":32},"no-native-reassign",["222"],"no-negated-in-lhs",["223"],["222"],["223"],["222"],["223"],["222"],["223"],["222"],["223"],"no-unused-vars","'error' is assigned a value but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["224"],"React Hook useEffect has a missing dependency: 'navigate'. Either include it or remove the dependency array.",["225"],"react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps",["226"],"'hasError' is assigned a value but never used.",["227"],["228"],["229"],["230"],["231"],["232"],["233"],["234"],["235"],["236"],["237"],["238"],"'useNavigate' is defined but never used.","'success' is assigned a value but never used.","'Error' is assigned a value but never used.","no-useless-concat","Unexpected string concatenation of literals.","BinaryExpression","unexpectedConcat","no-global-assign","no-unsafe-negation",{"desc":"239","fix":"240"},{"desc":"241","fix":"242"},{"desc":"239","fix":"243"},{"desc":"241","fix":"244"},{"desc":"239","fix":"245"},{"desc":"239","fix":"246"},{"desc":"241","fix":"247"},{"desc":"241","fix":"248"},{"desc":"239","fix":"249"},{"desc":"241","fix":"250"},{"desc":"239","fix":"251"},{"desc":"241","fix":"252"},{"desc":"239","fix":"253"},{"desc":"239","fix":"254"},{"desc":"241","fix":"255"},"Update the dependencies array to be: [id]",{"range":"256","text":"257"},"Update the dependencies array to be: [navigate, success]",{"range":"258","text":"259"},{"range":"260","text":"257"},{"range":"261","text":"259"},{"range":"262","text":"257"},{"range":"263","text":"257"},{"range":"264","text":"259"},{"range":"265","text":"259"},{"range":"266","text":"257"},{"range":"267","text":"259"},{"range":"268","text":"257"},{"range":"269","text":"259"},{"range":"270","text":"257"},{"range":"271","text":"257"},{"range":"272","text":"259"},[1859,1861],"[id]",[1945,1954],"[navigate, success]",[1001,1003],[1532,1541],[1029,1031],[1521,1523],[1607,1616],[1172,1181],[1530,1532],[1615,1624],[1022,1024],[1177,1186],[1034,1036],[2134,2136],[2307,2316]]