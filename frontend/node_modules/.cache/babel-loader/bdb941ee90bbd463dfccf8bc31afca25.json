{"ast":null,"code":"var _jsxFileName = \"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FinishedComponent/EditFinished.js\",\n    _s = $RefreshSig$();\n\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport { deleteFinishedById, fetchEmployees, fetchFinishedById, fetchPartners, fetchTasks, updateFinished } from \"../Service/Service\";\nimport { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport FormTextInput from \"../FormTextInput\";\nimport DeleteEntity from \"../DeleteEntity\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n_c = Container;\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n_c2 = Wrapper;\nconst Name = styled.div`\n  margin: 10px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n_c3 = Name;\nconst Desc = styled.div`\n  margin: 20px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n_c4 = Desc;\nconst AddNew = styled.div`\n  display: flex;\n  padding-left: 100px;\n`;\n_c5 = AddNew;\n\nconst EditFinished = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const navigate = useNavigate();\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n  const [tasks, setTasks] = useState();\n  const [employees, setEmployees] = useState();\n  const [partner, setPartner] = useState();\n  const [updatedFinished, setUpdatedFinished] = useState({});\n\n  const getFinished = async id => {\n    const response = await fetchFinishedById(id);\n    setUpdatedFinished(response);\n  };\n\n  const getPartner = async () => {\n    const result = await fetchPartners();\n    setPartner(result);\n  };\n\n  const getEmployees = async () => {\n    const result = await fetchEmployees();\n    setEmployees(result);\n  };\n\n  const getTasks = async () => {\n    const result = await fetchTasks();\n    setTasks(result);\n  };\n\n  const deleteClick = e => {\n    deleteFinishedById(id, setSuccess, setError);\n  };\n\n  const submitForm = e => {\n    updateFinished(updatedFinished, id, setSuccess, setError);\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    if (id) {\n      getFinished(id);\n    }\n  }, []);\n  useEffect(() => {\n    getTasks();\n    getEmployees();\n    getPartner();\n  }, []);\n  useEffect(() => {\n    if (success) {\n      navigate(\"/teljesitett\");\n    }\n  }, [success]);\n\n  if (!tasks || !employees || !partner) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Bet\\xF6lt\\xE9s folyamatban\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: /*#__PURE__*/_jsxDEV(Wrapper, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          onSubmit: submitForm,\n          children: [/*#__PURE__*/_jsxDEV(Name, {\n            children: /*#__PURE__*/_jsxDEV(FormTextInput, {\n              label: \"Feladat neve\",\n              dataObject: updatedFinished,\n              dataObjectKey: \"name\",\n              setter: setUpdatedFinished,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Name, {\n            children: /*#__PURE__*/_jsxDEV(FormTextInput, {\n              label: \"Feladat ideje\",\n              dataObject: updatedFinished,\n              dataObjectKey: \"time\",\n              setter: setUpdatedFinished,\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Desc, {\n            children: [\"Munkat\\xE1rsak\", /*#__PURE__*/_jsxDEV(Form.Select, {\n              onChange: e => setUpdatedFinished({ ...updatedFinished,\n                emp: e.target.value\n              }),\n              children: employees.map(employee => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: employee.name,\n                children: employee.name\n              }, employee.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Desc, {\n            children: [\"Feladat\", /*#__PURE__*/_jsxDEV(Form.Select, {\n              onChange: e => setUpdatedFinished({ ...updatedFinished,\n                project: e.target.value\n              }),\n              children: tasks.map(task => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: task.name,\n                children: task.name\n              }, task.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Desc, {\n            children: [\"Partner\", /*#__PURE__*/_jsxDEV(Form.Select, {\n              onChange: e => setUpdatedFinished({ ...updatedFinished,\n                partner: e.target.value\n              }),\n              children: partner.map(partner => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: partner.name,\n                children: partner.name\n              }, partner.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 19\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(AddNew, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              variant: \"outline-secondary\",\n              className: \"editButton\",\n              type: \"submit\",\n              children: \"Szerkeszt\\xE9s\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"deleteButton\",\n              children: /*#__PURE__*/_jsxDEV(DeleteEntity, {\n                confirmationQuestion: `Biztosan kitörlöd a következő feladatot? ${updatedFinished.name}`,\n                handleDelete: deleteClick,\n                ID: updatedFinished.id\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this)\n      }, updatedFinished.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n};\n\n_s(EditFinished, \"75ynI5B4xduUlCe3rLHAu1YgIpU=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c6 = EditFinished;\nexport default EditFinished;\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Wrapper\");\n$RefreshReg$(_c3, \"Name\");\n$RefreshReg$(_c4, \"Desc\");\n$RefreshReg$(_c5, \"AddNew\");\n$RefreshReg$(_c6, \"EditFinished\");","map":{"version":3,"sources":["/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/FinishedComponent/EditFinished.js"],"names":["useNavigate","useParams","deleteFinishedById","fetchEmployees","fetchFinishedById","fetchPartners","fetchTasks","updateFinished","useState","useEffect","Form","Button","styled","FormTextInput","DeleteEntity","Container","div","Wrapper","Name","Desc","AddNew","EditFinished","id","navigate","success","setSuccess","error","setError","tasks","setTasks","employees","setEmployees","partner","setPartner","updatedFinished","setUpdatedFinished","getFinished","response","getPartner","result","getEmployees","getTasks","deleteClick","e","submitForm","preventDefault","emp","target","value","map","employee","name","project","task"],"mappings":"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","sourcesContent":["import { useNavigate, useParams } from \"react-router-dom\";\nimport {\n  deleteFinishedById,\n  fetchEmployees,\n  fetchFinishedById,\n  fetchPartners,\n  fetchTasks,\n  updateFinished\n} from \"../Service/Service\";\nimport { useState, useEffect } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport styled from \"styled-components\";\nimport FormTextInput from \"../FormTextInput\";\nimport DeleteEntity from \"../DeleteEntity\";\n\nconst Container = styled.div`\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Wrapper = styled.div`\n  margin-top: 30px;\n  background-color: #fff;\n  width: 550px;\n  height: 750px;\n  padding: 30px;\n  box-sizing: border-box;\n  border-radius: 0px;\n  border-style: groove;\n`;\n\nconst Name = styled.div`\n  margin: 10px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst Desc = styled.div`\n  margin: 20px;\n  color: #969292;\n  font-size: 16px;\n  text-align: center;\n`;\n\nconst AddNew = styled.div`\n  display: flex;\n  padding-left: 100px;\n`;\n\nconst EditFinished = () => {\n  const { id } = useParams();\n  const navigate = useNavigate();\n\n  const [success, setSuccess] = useState(false);\n  const [error, setError] = useState(null);\n\n  const [tasks, setTasks] = useState();\n  const [employees, setEmployees] = useState();\n  const [partner, setPartner] = useState();\n\n  const [updatedFinished, setUpdatedFinished] = useState({});\n\n  const getFinished = async (id) => {\n    const response = await fetchFinishedById(id);\n    setUpdatedFinished(response);\n  };\n\n  const getPartner = async () => {\n    const result = await fetchPartners();\n    setPartner(result);\n  };\n\n  const getEmployees = async () => {\n    const result = await fetchEmployees();\n    setEmployees(result);\n  };\n\n  const getTasks = async () => {\n    const result = await fetchTasks();\n    setTasks(result);\n  };\n\n  const deleteClick = (e) => {\n    deleteFinishedById(id, setSuccess, setError);\n  };\n\n  const submitForm = (e) => {\n    updateFinished(updatedFinished, id, setSuccess, setError);\n    e.preventDefault();\n  };\n\n  useEffect(() => {\n    if (id) {\n      getFinished(id);\n    }\n  }, []);\n\n  useEffect(() => {\n    getTasks();\n    getEmployees();\n    getPartner();\n  }, []);\n\n  useEffect(() => {\n    if (success) {\n      navigate(\"/teljesitett\");\n    }\n  }, [success]);\n\n  if (!tasks || !employees || !partner) {\n    return <div>Betöltés folyamatban</div>;\n  }\n  return (\n    <Container>\n      <Wrapper>\n        <div key={updatedFinished.id}>\n          <Form onSubmit={submitForm}>\n            <Name>\n              <FormTextInput\n                label=\"Feladat neve\"\n                dataObject={updatedFinished}\n                dataObjectKey=\"name\"\n                setter={setUpdatedFinished}\n                required={true}\n              />\n            </Name>\n            <Name>\n              <FormTextInput\n                label=\"Feladat ideje\"\n                dataObject={updatedFinished}\n                dataObjectKey=\"time\"\n                setter={setUpdatedFinished}\n                required={true}\n              />\n            </Name>\n            <Desc>\n              Munkatársak\n              <Form.Select\n                onChange={(e) =>\n                  setUpdatedFinished({\n                    ...updatedFinished,\n                    emp: e.target.value\n                  })\n                }\n              >\n                {employees.map((employee) => (\n                  <option value={employee.name} key={employee.id}>\n                    {employee.name}\n                  </option>\n                ))}\n              </Form.Select>\n            </Desc>\n\n            <Desc>\n              Feladat\n              <Form.Select\n                onChange={(e) =>\n                  setUpdatedFinished({\n                    ...updatedFinished,\n                    project: e.target.value\n                  })\n                }\n              >\n                {tasks.map((task) => (\n                  <option value={task.name} key={task.id}>\n                    {task.name}\n                  </option>\n                ))}\n              </Form.Select>\n            </Desc>\n            <Desc>\n              Partner\n              <Form.Select\n                onChange={(e) =>\n                  setUpdatedFinished({\n                    ...updatedFinished,\n                    partner: e.target.value\n                  })\n                }\n              >\n                {partner.map((partner) => (\n                  <option value={partner.name} key={partner.id}>\n                    {partner.name}\n                  </option>\n                ))}\n              </Form.Select>\n            </Desc>\n            <AddNew>\n              <Button\n                variant=\"outline-secondary\"\n                className=\"editButton\"\n                type=\"submit\"\n              >\n                Szerkesztés\n              </Button>\n              <div className=\"deleteButton\">\n                <DeleteEntity\n                  confirmationQuestion={`Biztosan kitörlöd a következő feladatot? ${updatedFinished.name}`}\n                  handleDelete={deleteClick}\n                  ID={updatedFinished.id}\n                />\n              </div>\n            </AddNew>\n          </Form>\n        </div>\n      </Wrapper>\n    </Container>\n  );\n};\nexport default EditFinished;\n"]},"metadata":{},"sourceType":"module"}