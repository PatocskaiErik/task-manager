{"ast":null,"code":"var _jsxFileName = \"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/About.js\",\n    _s = $RefreshSig$();\n\nimport styled from \"styled-components\";\nimport { Button, Container } from \"react-bootstrap\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport ErrorBody from \"./ErrorBody\";\nimport { fetchTasksById } from \"./Service\";\nimport { Link, useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Note = styled.div`\n  text-decoration: none;\n  margin: 20px 20px 20px 20px;\n  align-items: center;\n  color: #000;\n  background: white;\n  height: 220px;\n  width: 300px;\n  padding: 1em;\n`;\n_c = Note;\nconst TaskName = styled.div`\n  text-align: center;\n  font-size: 30px;\n`;\n_c2 = TaskName;\nconst Partner = styled.div`\n  text-align: center;\n  font-size: 20px;\n  margin-top: 10px;\n`;\n_c3 = Partner;\n\nconst About = () => {\n  _s();\n\n  const {\n    id\n  } = useParams();\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState([]);\n  const [error, setError] = useState(null);\n\n  const getTasksById = async id => {\n    const result = await fetchTasksById(id);\n    setTask(result);\n  };\n\n  useEffect(() => {\n    console.log(\"valami\");\n\n    if (id) {\n      getTasksById(id);\n    }\n\n    console.log(id);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"note\",\n    children: error ? /*#__PURE__*/_jsxDEV(ErrorBody, {\n      error: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 9\n    }, this) : task.map(feladat => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Note, {\n          children: [/*#__PURE__*/_jsxDEV(TaskName, {\n            children: feladat.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Partner, {\n            children: feladat.part\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Partner, {\n            children: feladat.description\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 15\n        }, this)\n      }, feladat.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n\n_s(About, \"zm8/Ak6jqspTOjyWeoRq//F2LUc=\", false, function () {\n  return [useParams];\n});\n\n_c4 = About;\nexport default About;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Note\");\n$RefreshReg$(_c2, \"TaskName\");\n$RefreshReg$(_c3, \"Partner\");\n$RefreshReg$(_c4, \"About\");","map":{"version":3,"sources":["/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/About.js"],"names":["styled","Button","Container","useEffect","useState","ErrorBody","fetchTasksById","Link","useParams","Note","div","TaskName","Partner","About","id","tasks","setTasks","task","setTask","error","setError","getTasksById","result","console","log","map","feladat","name","part","description"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,mBAAnB;AACA,SAASC,MAAT,EAAiBC,SAAjB,QAAkC,iBAAlC;AACA,OAAO,WAAP;AACA,SAASC,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,SAASC,cAAT,QAA+B,WAA/B;AACA,SAASC,IAAT,EAAeC,SAAf,QAAgC,kBAAhC;;AAEA,MAAMC,IAAI,GAAGT,MAAM,CAACU,GAAI;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CATA;KAAMD,I;AAWN,MAAME,QAAQ,GAAGX,MAAM,CAACU,GAAI;AAC5B;AACA;AACA,CAHA;MAAMC,Q;AAKN,MAAMC,OAAO,GAAGZ,MAAM,CAACU,GAAI;AAC3B;AACA;AACA;AACA,CAJA;MAAME,O;;AAMN,MAAMC,KAAK,GAAG,MAAM;AAAA;;AAClB,QAAM;AAAEC,IAAAA;AAAF,MAASN,SAAS,EAAxB;AAEA,QAAM,CAACO,KAAD,EAAQC,QAAR,IAAoBZ,QAAQ,CAAC,EAAD,CAAlC;AACA,QAAM,CAACa,IAAD,EAAOC,OAAP,IAAkBd,QAAQ,CAAC,EAAD,CAAhC;AACA,QAAM,CAACe,KAAD,EAAQC,QAAR,IAAoBhB,QAAQ,CAAC,IAAD,CAAlC;;AAEA,QAAMiB,YAAY,GAAG,MAAOP,EAAP,IAAc;AACjC,UAAMQ,MAAM,GAAG,MAAMhB,cAAc,CAACQ,EAAD,CAAnC;AACAI,IAAAA,OAAO,CAACI,MAAD,CAAP;AACD,GAHD;;AAKAnB,EAAAA,SAAS,CAAC,MAAM;AACdoB,IAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;;AACA,QAAIV,EAAJ,EAAQ;AACNO,MAAAA,YAAY,CAACP,EAAD,CAAZ;AACD;;AACDS,IAAAA,OAAO,CAACC,GAAR,CAAYV,EAAZ;AACD,GANQ,EAMN,EANM,CAAT;AAQA,sBACE;AAAK,IAAA,SAAS,EAAC,MAAf;AAAA,cACGK,KAAK,gBACJ,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEA;AAAlB;AAAA;AAAA;AAAA;AAAA,YADI,GAGJF,IAAI,CAACQ,GAAL,CAAUC,OAAD,IAAa;AACpB,0BACE;AAAA,+BACE,QAAC,IAAD;AAAA,kCACE,QAAC,QAAD;AAAA,sBAAWA,OAAO,CAACC;AAAnB;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,OAAD;AAAA,sBAAUD,OAAO,CAACE;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE,QAAC,OAAD;AAAA,sBAAUF,OAAO,CAACG;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF,SAAUH,OAAO,CAACZ,EAAlB;AAAA;AAAA;AAAA;AAAA,cADF;AASD,KAVD;AAJJ;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CAvCD;;GAAMD,K;UACWL,S;;;MADXK,K;AAyCN,eAAeA,KAAf","sourcesContent":["import styled from \"styled-components\";\nimport { Button, Container } from \"react-bootstrap\";\nimport \"./App.css\";\nimport { useEffect, useState } from \"react\";\nimport ErrorBody from \"./ErrorBody\";\nimport { fetchTasksById } from \"./Service\";\nimport { Link, useParams } from \"react-router-dom\";\n\nconst Note = styled.div`\n  text-decoration: none;\n  margin: 20px 20px 20px 20px;\n  align-items: center;\n  color: #000;\n  background: white;\n  height: 220px;\n  width: 300px;\n  padding: 1em;\n`;\n\nconst TaskName = styled.div`\n  text-align: center;\n  font-size: 30px;\n`;\n\nconst Partner = styled.div`\n  text-align: center;\n  font-size: 20px;\n  margin-top: 10px;\n`;\n\nconst About = () => {\n  const { id } = useParams();\n\n  const [tasks, setTasks] = useState([]);\n  const [task, setTask] = useState([]);\n  const [error, setError] = useState(null);\n\n  const getTasksById = async (id) => {\n    const result = await fetchTasksById(id);\n    setTask(result);\n  };\n\n  useEffect(() => {\n    console.log(\"valami\");\n    if (id) {\n      getTasksById(id);\n    }\n    console.log(id);\n  }, []);\n\n  return (\n    <div className=\"note\">\n      {error ? (\n        <ErrorBody error={error} />\n      ) : (\n        task.map((feladat) => {\n          return (\n            <div key={feladat.id}>\n              <Note>\n                <TaskName>{feladat.name}</TaskName>\n                <Partner>{feladat.part}</Partner>\n                <Partner>{feladat.description}</Partner>\n              </Note>\n            </div>\n          );\n        })\n      )}\n    </div>\n  );\n};\n\nexport default About;\n"]},"metadata":{},"sourceType":"module"}