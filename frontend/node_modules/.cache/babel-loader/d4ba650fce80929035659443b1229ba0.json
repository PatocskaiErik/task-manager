{"ast":null,"code":"var _jsxFileName = \"/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/LoginPage.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport \"./login.css\";\nimport { getToken, setToken } from \"./AuthService\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction useLocalStorage(key, initialValue) {\n  _s();\n\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = value => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore = value instanceof Function ? value(storedValue) : value; // Save state\n\n      setStoredValue(valueToStore); // Save to local storage\n\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n\n  return [storedValue, setValue];\n}\n\n_s(useLocalStorage, \"85bDLJOdffvDdfQv6PuN5Q0aulA=\");\n\nconst LoginPage = () => {\n  _s2();\n\n  const [email, setEmail] = useLocalStorage(\"\");\n  const [password, setPassword] = useState(\"\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"loginPage\",\n    children: /*#__PURE__*/_jsxDEV(Form, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: \"E-mail\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"form\",\n        placeHolder: \"E-mail\",\n        type: \"text\",\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text\",\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n        className: \"form\",\n        value: password,\n        placeHolder: \"Password\",\n        type: \"text\",\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-dark\",\n          className: \"loginButton\",\n          onClick: window.localStorage.getItem(email),\n          children: \"Bel\\xE9p\\xE9s\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"outline-dark\",\n          className: \"regButton\",\n          onClick: window.localStorage.setItem(email, password),\n          children: \"Regisztr\\xE1ci\\xF3\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n\n_s2(LoginPage, \"jAI60qj76bzZLbITx0jzrEfMtI0=\", false, function () {\n  return [useLocalStorage];\n});\n\n_c = LoginPage;\nexport default LoginPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginPage\");","map":{"version":3,"sources":["/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/LoginPage.js"],"names":["React","useState","Form","Button","axios","getToken","setToken","useLocalStorage","key","initialValue","storedValue","setStoredValue","item","window","localStorage","getItem","JSON","parse","error","console","log","setValue","value","valueToStore","Function","setItem","stringify","LoginPage","email","setEmail","password","setPassword","e","target"],"mappings":"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","sourcesContent":["import \"bootstrap/dist/css/bootstrap.min.css\";\nimport React, { useState } from \"react\";\nimport { Form, Button } from \"react-bootstrap\";\nimport axios from \"axios\";\nimport \"./login.css\";\nimport { getToken, setToken } from \"./AuthService\";\n\nfunction useLocalStorage(key, initialValue) {\n  const [storedValue, setStoredValue] = useState(() => {\n    try {\n      const item = window.localStorage.getItem(key);\n      return item ? JSON.parse(item) : initialValue;\n    } catch (error) {\n      console.log(error);\n      return initialValue;\n    }\n  });\n\n  const setValue = (value) => {\n    try {\n      // Allow value to be a function so we have same API as useState\n      const valueToStore =\n        value instanceof Function ? value(storedValue) : value;\n      // Save state\n      setStoredValue(valueToStore);\n      // Save to local storage\n      window.localStorage.setItem(key, JSON.stringify(valueToStore));\n    } catch (error) {\n      // A more advanced implementation would handle the error case\n      console.log(error);\n    }\n  };\n  return [storedValue, setValue];\n}\n\nconst LoginPage = () => {\n  const [email, setEmail] = useLocalStorage(\"\");\n  const [password, setPassword] = useState(\"\");\n\n  return (\n    <div className=\"loginPage\">\n      <Form>\n        <div className=\"text\">E-mail</div>\n        <Form.Control\n          className=\"form\"\n          placeHolder=\"E-mail\"\n          type=\"text\"\n          onChange={(e) => setEmail(e.target.value)}\n        />\n        <div className=\"text\">Password</div>\n        <Form.Control\n          className=\"form\"\n          value={password}\n          placeHolder=\"Password\"\n          type=\"text\"\n          onChange={(e) => setPassword(e.target.value)}\n        />\n        <div>\n          <Button\n            variant=\"outline-dark\"\n            className=\"loginButton\"\n            onClick={window.localStorage.getItem(email)}\n          >\n            Belépés\n          </Button>\n          <Button\n            variant=\"outline-dark\"\n            className=\"regButton\"\n            onClick={window.localStorage.setItem(email, password)}\n          >\n            Regisztráció\n          </Button>\n        </div>\n      </Form>\n    </div>\n  );\n};\nexport default LoginPage;\n"]},"metadata":{},"sourceType":"module"}