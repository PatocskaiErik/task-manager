{"ast":null,"code":"import axios from \"axios\";\nexport const fetchTasks = async () => {\n  const url = \"/api/tasks\";\n\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\nexport const fetchTasksById = async id => {\n  const url = \"/api/tasks\" + \"/\" + id;\n\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\nexport const updateTask = async (task, id, setSuccess, setHasError) => {\n  const url = \"/api/tasks\" + \"/\" + id;\n\n  try {\n    const response = await axios.put(url, task);\n\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\nexport const deleteTaskById = async (id, setSuccess, setError) => {\n  const url = \"/api/tasks\" + \"/\" + id;\n\n  try {\n    const response = await axios.delete(url);\n\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};\nexport const fetchPartners = async () => {\n  const url = \"/api/partners\";\n\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\nexport const fetchPartnersById = async id => {\n  const url = \"/api/partners\" + \"/\" + id;\n\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\nexport const addPartner = async (partner, setSuccess, setHasError) => {\n  const url = \"/api/partners\";\n\n  try {\n    const response = await axios.post(url, partner);\n\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\nexport const updatePartner = async (updatedPartner, id, setSuccess, setHasError) => {\n  const url = \"/api/partners\" + \"/\" + id;\n\n  try {\n    const response = await axios.put(url, updatedPartner);\n\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\nexport const deletePartnersById = async (id, setSuccess, setError) => {\n  const url = \"/api/\" + \"/\" + id;\n\n  try {\n    const response = await axios.delete(url);\n\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};\nexport const fetchEmployees = async () => {\n  const url = \"/api/employees\";\n\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\nexport const fetchEmployeeById = async id => {\n  const url = \"/api/employees\" + \"/\" + id;\n\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\nexport const addEmployee = async (newEmployee, setSuccess, setHasError) => {\n  const url = \"/api/employees\";\n\n  try {\n    const response = await axios.post(url, newEmployee);\n\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\nexport const fetchFinished = async () => {\n  const url = \"/api/finished\";\n\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\nexport const addTask = async (task, setSuccess, setHasError) => {\n  const url = \"/api/tasks\";\n\n  try {\n    const response = await axios.post(url, task);\n\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};","map":{"version":3,"sources":["/Users/patocskaierik/Desktop/task-manager/task-manager/frontend/src/Service.js"],"names":["axios","fetchTasks","url","response","get","data","error","console","warn","Error","fetchTasksById","id","updateTask","task","setSuccess","setHasError","put","status","deleteTaskById","setError","delete","fetchPartners","fetchPartnersById","addPartner","partner","post","updatePartner","updatedPartner","deletePartnersById","fetchEmployees","fetchEmployeeById","addEmployee","newEmployee","fetchFinished","addTask"],"mappings":"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","sourcesContent":["import axios from \"axios\";\n\nexport const fetchTasks = async () => {\n  const url = \"/api/tasks\";\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const fetchTasksById = async (id) => {\n  const url = \"/api/tasks\" + \"/\" + id;\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const updateTask = async (task, id, setSuccess, setHasError) => {\n  const url = \"/api/tasks\" + \"/\" + id;\n  try {\n    const response = await axios.put(url, task);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\n\nexport const deleteTaskById = async (id, setSuccess, setError) => {\n  const url = \"/api/tasks\" + \"/\" + id;\n  try {\n    const response = await axios.delete(url);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};\n\nexport const fetchPartners = async () => {\n  const url = \"/api/partners\";\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const fetchPartnersById = async (id) => {\n  const url = \"/api/partners\" + \"/\" + id;\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const addPartner = async (partner, setSuccess, setHasError) => {\n  const url = \"/api/partners\";\n  try {\n    const response = await axios.post(url, partner);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\n\nexport const updatePartner = async (\n  updatedPartner,\n  id,\n  setSuccess,\n  setHasError\n) => {\n  const url = \"/api/partners\" + \"/\" + id;\n  try {\n    const response = await axios.put(url, updatedPartner);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\n\nexport const deletePartnersById = async (id, setSuccess, setError) => {\n  const url = \"/api/\" + \"/\" + id;\n  try {\n    const response = await axios.delete(url);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setError(true);\n  }\n};\n\nexport const fetchEmployees = async () => {\n  const url = \"/api/employees\";\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const fetchEmployeeById = async (id) => {\n  const url = \"/api/employees\" + \"/\" + id;\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const addEmployee = async (newEmployee, setSuccess, setHasError) => {\n  const url = \"/api/employees\";\n  try {\n    const response = await axios.post(url, newEmployee);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\n\nexport const fetchFinished = async () => {\n  const url = \"/api/finished\";\n  try {\n    const response = await axios.get(url);\n    const data = response.data;\n    return data;\n  } catch (error) {\n    console.warn(\"Failed to load tasks\");\n    throw Error(\"Nem sikerült betölteni a feladatok listáját!\");\n  }\n};\n\nexport const addTask = async (task, setSuccess, setHasError) => {\n  const url = \"/api/tasks\";\n  try {\n    const response = await axios.post(url, task);\n    if (response.status === 200) {\n      setSuccess(true);\n    }\n  } catch (error) {\n    setHasError(true);\n  }\n};\n"]},"metadata":{},"sourceType":"module"}